input{
    file{
        path => "--.xml"
        start_position => beginning
        sincedb_path => "NUL"
        type => "winLog"
        codec => multiline{
            pattern => "<Event>|</Event>"
            negate => true
            what => "previous"
            auto_flush_interval => 1
        }
    }
}

filter{
    if [type] == "winLog"{
        if [message] == "<Events>" or [message] == "</Events>" {
            drop{}
        }
        xml{
            source => "message"
            store_xml => false
            target => "Events"
            remove_namespaces => true
            xpath => [
                "/Events/Event/System/EventID/text()", "Eventd_Id", 
                "/Events/Event/System/TimeCreated/@SystemTime", "TimeStamp",
                "/Events/Event/System/Channel/text()", "log_Type",
                "/Events/Event/EventData/Data/@Name", "Data_Name",
                "/Events/Event/EventData/Data/text()", "Data_Value"
            ]
        }
        mutate{
            remove_field => ["message", "@version", "host", "type", "@timestamp", "path", "tags"]
        }
    }
}

output{
    stdout{
        codec => rubydebug
    }
    file{
        path => "--.json"
        codec => rubydebug
    }
}